# 128最长连续序列.py
'''
给定一个未排序的整数数组，找出最长连续序列的长度。

要求算法的时间复杂度为 O(n)。

示例:

输入: [100, 4, 200, 1, 3, 2]
输出: 4
解释: 最长连续序列是 [1, 2, 3, 4]。它的长度为 4。
'''
'''
678 LCIS ：Longest Continuous Increasing Subsequence 最长连续递增序列

300 LIS：Longest Increasing Subsequence 最长上升子序列

128 LCS：Longest Consecutive Sequence 最长连续序列

LCS：longest common subsequence 最长公共子序列
'''
'''
1、子序列（Subsequence）：“子序列”并不要求是连续子序列，只要保证元素前后顺序一致即可，例如：序列 [4, 6, 5] 是 [1, 2, 4, 3, 7, 6, 5] 的一个子序列；

2、上升：这里“上升”要求严格“上升”。

例如一个序列 [2, 3, 3, 6, 7] ，由于 3 重复了，所以不是严格“上升”的，因此它不是题目要求的“上升”序列。

一个序列可能有多个最长上升子序列，题目中只要我们求这个最长的长度。如果使用回溯算法，选择所有的子序列进行判断，时间复杂度为 O((2^N) * N)
'''




